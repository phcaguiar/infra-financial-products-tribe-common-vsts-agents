---
### Ansible Tasks for Linux System
  - name: Ansible Tasks for Linux System
    hosts: linux
    become: true
    tasks:
      - name: "{{ ping_var }}"
        ping:

#   ## Task to Install VSTS Agent Queue
#       - name: Task to Install VSTS Agent Queue
#         include_role:
#           name: stone-payments.role-vsts-agent
#         vars: 
#           vsts_agent_name: "{{ ansible_hostname }}-a{{ item }}"
#           vsts_agentfolder: "/home/{{ vsts_agent_user }}/agent/a{{ item }}"
#           vsts_workfolder:  "/home/{{ vsts_agent_user }}/work/a{{ item }}"
#         loop: "{{ range(1,4) | list }}"

# ### Docker tasks
#     - name: 'install docker dependencies'
#       apt:
#         name: '{{ item }}'
#         state: 'present'
#       with_items:
#         - 'apt-transport-https'
#         - 'ca-certificates'  

#     - name: 'add docker repo apt key'
#       apt_key:
#         url: 'https://download.docker.com/linux/ubuntu/gpg'
#         id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
#         state: 'present'
#       register: 'add_repository_key'
#       ignore_errors: true          

#     - name: 'add Docker repository'
#       apt_repository:
#         repo: '{{ docker_apt_repository }}'
#         state: 'present'
#         update_cache: 'yes'   

#     - name: 'install docker'
#       apt:
#         name: 'docker-ce={{ docker_version }}'
#         state: 'present'       

#     - name: 'prepare default daemon configuration'
#       copy:
#         src: 'daemon.json'
#         dest: '/etc/docker/daemon.json'

#     - name: 'set periodic docker system prune'
#       cron:
#         name: 'docker-prune'
#         minute: '0'
#         hour: '*/2'
#         job: 'docker container prune -f'    

#     - name: 'add users to docker group'
#       user:
#         name: '{{ item }}'
#         groups: 'docker'
#         append: 'yes'
#       with_items: '{{ vsts_agent_user }}'
#       when: 'docker_group_members is defined'

#     - name: 'enable docker systemd service'
#       service:
#         name: 'docker'
#         state: 'started'
#         enabled: 'yes'

# ## Dotnetcore installation tasks
#     - name: Make sure HTTPS is supported by apt
#       apt:
#         name: apt-transport-https
#         state: present
#         update_cache: yes

#     - name: Import Microsoft APT key
#       apt_key:
#         url: "https://packages.microsoft.com/keys/microsoft.asc"
#         state: present

#     - name: Add repo for Ubuntu Xenial
#       apt_repository:
#         repo: deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main
#         filename: "dotnetdev"
#         state: present
#         update_cache: yes
#       when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"

#     - name: Add repo for Ubuntu Bionic
#       apt_repository:
#         repo: deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main
#         filename: "dotnetdev"
#         state: present
#         update_cache: yes
#       when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

#     - name: 'install dotnet sdk versions'
#       apt:
#         name: '{{ item }}'
#         state: 'present'
#         update_cache: true
#       with_items:
#         - 'dotnet-sdk-1.1'
#         - 'dotnet-sdk-2.2'
